#!/bin/bash

function summary_go() {
cat << EOF

    Summary of Golang
    ==================

    *  To set user Go install path
       $ go env -w GOBIN=$HOME/common/go/bin
       $ go env -w GOPATH=$HOME/common/go/
       $ go env -w GOMODCACHE=$HOME/common/go/pkg/mod

    *  Go lang application is statically linked and uses go module to maintain
       application dependency by
       $ go mod init <module-name>'

    *  Go app (filename.go) can be built and executed by
       $ go run .

    *  Search Go package at https://pkg.go.dev

    *  Tidy up Go module dependency when new module is added
       $ go mod tidy
       Note: downloaded modules are stored in $GOPATH/pkg/mod

    *  [Optional] To store all 3rd-party packages under Go module directory
       $ go mod vendor
       Note: <module>/vendor/modules.txt  - list all modules downloaded

    *  Before Go package is published to Internet, you can temporarily replace
       the module external path to local path
       $ go mod edit -replace example.com/greeting=../greeting

       After the module path is updated, tidy the go module dependency
       $ go mod tidy

       List go module dependencies
       $ go list -m all

    *  Go execute init() function automatically after global variables
       have been initialized

    *  Compile and Install the go program under:
       $ go build
       $ go install

    *  To show Go installed path of a program
       $ go list -f '{{.Target}}'

    *  To install a Go package from github.com, e.g.
       Note: package is installed into $GOPATH/mod/github.com/gin-gonic/gin
       $ go get github.com/gin-gonic/gin

   VSCode Information
   ==================
    *  Install "Go" extension that includes following tools:
        * gocode - generate HTML pages of API docs
        * gopkgs - autocomplete unimported packages at File/save
        * golint - detect errors
        * godef  - print Symbols in Go source code

    Misc Information
    ================
    *  Go package documentation
       https://pkg.go.dev/std

    *  Effective Go
       https://go.dev/doc/effective_go

    *  Generics in Go
       https://go.dev/doc/tutorial/generics

    *  Fuzzing (SQL injection, buffer overflow, denial of service and
       cross-site scripting attacks.)
       https://go.dev/doc/tutorial/fuzz

    *  Go command and tool
       https://go.dev/doc/cmd

    *  Go module reference
       https://go.dev/ref/mod

    *  The go.mod reference
       https://go.dev/doc/modules/gomod-ref

    *  Go language specification
       https://go.dev/ref/spec

    *  The Go Blog
       https://go.dev/blog/

    Reference
    =========
    [1]     https://go.dev/doc/tutorial/getting-started
    [2]     https://go.dev/doc/tutorial/create-module
    [3]     https://go.dev/doc/modules/managing-dependencies#naming_module

EOF
}
